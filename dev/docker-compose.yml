networks:
  monitor-net:
    driver: bridge

volumes:
    prometheus_data: {}

services:

  calert:
    build:
      context: ../
      dockerfile: dev/Dockerfile.dev
    command: ["make", "fresh"]
    ports:
      - "6000:6000"
    volumes:
      - ../:/app
      - $GOPATH/pkg/mod/cache:/go/pkg/mod/cache
    networks:
      - monitor-net
    user: ${CURRENT_UID}

  alertmanager:
    image: prom/alertmanager:v0.23.0
    container_name: alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    ports:
      - 9093:9093
    networks:
      - monitor-net
    depends_on:
      - calert

  prometheus:
    image: prom/prometheus:v2.32.1
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=24h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
      - 9090:9090
    networks:
      - monitor-net
    depends_on:
      - alertmanager
